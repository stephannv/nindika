/ This template is i18n-ready: if you don't use i18n, then you can replace the pagy_t
/ calls with the actual strings ("&lsaquo; Prev", "Next &rsaquo;", "&hellip;").

/ The link variable is set to a proc that returns the link tag.
/ Usage: link.call( page_number [, text [, extra_attributes_string ]])

- link = pagy_link_proc(pagy)

nav.pagy-bootstrap-nav role="navigation" aria-label="pager"

  ul.pagination.pagination-lg.justify-content-between
    - if pagy.prev
      li.page-item.prev.shadow-sm == link.call(pagy.prev, pagy_t('pagy.nav.prev'), 'aria-label="previous"')
    - else
      li.page-item.prev.disabled.shadow-sm
        a.page-link href="#" == pagy_t('pagy.nav.prev')

    / - pagy.series.each do |item|
    /   - if item.is_a?(Integer)
    /     li.page-item.shadow-sm == link.call(item)

    /   - elsif item.is_a?(String)
    /     li.page-item.active.shadow-sm == link.call(item)

    /   - elsif item == :gap
    /     li.page-item.disabled.gap.shadow-sm
    /       a.page-link href="#" == pagy_t('pagy.nav.gap')

    - if pagy.next
      li.page-item.next.shadow-sm == link.call(pagy.next, pagy_t('pagy.nav.next'), 'aria-label="next"')
    - else
      li.page-item.next.disabled.shadow-sm
        a.page-link href="#" == pagy_t('pagy.nav.next')
